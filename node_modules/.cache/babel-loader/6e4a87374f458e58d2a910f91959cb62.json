{"ast":null,"code":"import _slicedToArray from\"C:/Users/bvcbi/OneDrive/Desktop/Storage/git/netflix/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import'./RowPost.css';import axios from'../../axios';import Youtube from'react-youtube';import{API_KEY,imageUrl}from'../../constants/constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RowPost(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),urlId=_useState4[0],setUrlId=_useState4[1];useEffect(function(){axios.get(props.url).then(function(response){console.log(response.data);setMovies(response.data.results);});},[]);var opts={height:'390',width:'100%',playerVars:{autoplay:1}};var handleMovie=function handleMovie(id){console.log(id);axios.get(\"movie/\".concat(id,\"/videos?api_key=\").concat(API_KEY,\"&language=en-US\")).then(function(response){if(response.data.results.length!==0){setUrlId(response.data.results[0]);}else{console.log('Array empty');}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:props.title}),/*#__PURE__*/_jsx(\"div\",{className:\"posters\",children:movies.map(function(obj){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleMovie(obj.id);},className:props.isSmall?'smallPoster':'poster',alt:\"poster\",src:\"\".concat(imageUrl+obj.backdrop_path)});})}),urlId&&/*#__PURE__*/_jsx(Youtube,{opts:opts,videoId:urlId.key})]});}export default RowPost;","map":{"version":3,"sources":["C:/Users/bvcbi/OneDrive/Desktop/Storage/git/netflix/src/Components/RowPost/RowPost.js"],"names":["React","useEffect","useState","axios","Youtube","API_KEY","imageUrl","RowPost","props","movies","setMovies","urlId","setUrlId","get","url","then","response","console","log","data","results","opts","height","width","playerVars","autoplay","handleMovie","id","length","title","map","obj","isSmall","backdrop_path","key"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAAQC,OAAR,CAAiBC,QAAjB,KAAiC,2BAAjC,C,wFACA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACpB,cAA4BN,QAAQ,CAAC,EAAD,CAApC,wCAAOO,MAAP,eAAeC,SAAf,eACA,eAAwBR,QAAQ,CAAC,EAAD,CAAhC,yCAAMS,KAAN,eAAYC,QAAZ,eACAX,SAAS,CAAC,UAAK,CACXE,KAAK,CAACU,GAAN,CAAUL,KAAK,CAACM,GAAhB,EAAqBC,IAArB,CAA0B,SAAAC,QAAQ,CAAE,CAChCC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EACAT,SAAS,CAACM,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAT,CACH,CAHD,EAIH,CALQ,CAKN,EALM,CAAT,CAMA,GAAMC,CAAAA,IAAI,CAAG,CACTC,MAAM,CAAE,KADC,CAETC,KAAK,CAAE,MAFE,CAGTC,UAAU,CAAE,CACRC,QAAQ,CAAC,CADD,CAHH,CAAb,CAOA,GAAMC,CAAAA,WAAW,CAAE,QAAbA,CAAAA,WAAa,CAACC,EAAD,CAAO,CAEtBV,OAAO,CAACC,GAAR,CAAYS,EAAZ,EACAxB,KAAK,CAACU,GAAN,iBAAmBc,EAAnB,4BAAwCtB,OAAxC,qBAAkEU,IAAlE,CAAuE,SAAAC,QAAQ,CAAE,CAC7E,GAAGA,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBQ,MAAtB,GAA+B,CAAlC,CAAoC,CAChChB,QAAQ,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CAAD,CAAR,CACH,CAFD,IAEK,CACLH,OAAO,CAACC,GAAR,CAAY,aAAZ,EACC,CACJ,CAND,EAOH,CAVD,CAWA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,oBAAKV,KAAK,CAACqB,KAAX,EADJ,cAEI,YAAK,SAAS,CAAC,SAAf,UACKpB,MAAM,CAACqB,GAAP,CAAW,SAACC,GAAD,qBAGZ,YAAK,OAAO,CAAE,yBAAIL,CAAAA,WAAW,CAACK,GAAG,CAACJ,EAAL,CAAf,EAAd,CAAuC,SAAS,CAAEnB,KAAK,CAACwB,OAAN,CAAe,aAAf,CAA6B,QAA/E,CAAyF,GAAG,CAAC,QAA7F,CAAsG,GAAG,WAAK1B,QAAQ,CAACyB,GAAG,CAACE,aAAlB,CAAzG,EAHY,EAAX,CADL,EAFJ,CASMtB,KAAK,eAAI,KAAC,OAAD,EAAS,IAAI,CAAEU,IAAf,CAAqB,OAAO,CAAEV,KAAK,CAACuB,GAApC,EATf,GADJ,CAaH,CAED,cAAe3B,CAAAA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport './RowPost.css'\r\nimport axios from '../../axios'\r\nimport Youtube from 'react-youtube'\r\nimport {API_KEY, imageUrl } from '../../constants/constants';\r\nfunction RowPost(props) {\r\n    const [movies, setMovies] = useState([]);\r\n    const[urlId,setUrlId] = useState('')\r\n    useEffect(() =>{\r\n        axios.get(props.url).then(response=>{\r\n            console.log(response.data)\r\n            setMovies(response.data.results)\r\n        })\r\n    }, [])\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n            autoplay:1,\r\n        }\r\n    }\r\n    const handleMovie= (id) =>{\r\n        \r\n        console.log(id)\r\n        axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{\r\n            if(response.data.results.length!==0){\r\n                setUrlId(response.data.results[0])\r\n            }else{\r\n            console.log('Array empty')\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className='row'>\r\n            <h2>{props.title}</h2>\r\n            <div className='posters'>\r\n                {movies.map((obj)=>\r\n\r\n                \r\n                <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ?'smallPoster':'poster'} alt='poster' src={`${imageUrl+obj.backdrop_path}`} />\r\n            )}\r\n            </div>\r\n            { urlId && <Youtube opts={opts} videoId={urlId.key}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowPost\r\n"]},"metadata":{},"sourceType":"module"}